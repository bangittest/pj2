const CartItem = require('../models/cartItem');
const Products = require('../models/product');

exports.addItemToCart = async (req, res) => {
  try {
    const { cart_id, product_id, quantity } = req.body;

    // Ki·ªÉm tra n·∫øu s·∫£n ph·∫©m t·ªìn t·∫°i v√† c√≥ ƒë·ªß s·ªë l∆∞·ª£ng
    const itemId = await CartItem.addItem(cart_id, product_id, quantity);

    // N·∫øu th√†nh c√¥ng, tr·∫£ v·ªÅ id c·ªßa item v·ª´a th√™m v√†o gi·ªè
    res.status(200).json({ itemId });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: err.message || 'L·ªói th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng' });
  }
};

exports.getCartItems = async (req, res) => {
  try {
    const { user_id } = req.params;
    const items = await CartItem.getItemsByCartId(user_id);
    res.json({ items });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'L·ªói l·∫•y gi·ªè h√†ng' });
  }
};

exports.countItems = async (req, res) => {
    try {
      const { userId } = req.params;
      const totalItems = await CartItem.countItemsByUserId(userId);
      res.status(200).json({ totalItems });
    } catch (err) {
      console.error(err);
      res.status(500).json({ error: 'L·ªói khi ƒë·∫øm s·∫£n ph·∫©m trong gi·ªè h√†ng' });
    }
  };




  exports.increaseQuantity = async (req, res) => {
    const { id } = req.params;
  
    try {
      const item = await CartItem.getItemById(id);
    //   console.log("üß∫ Gi·ªè h√†ng item:", item); // ‚úÖ Log item
  
      if (!item) return res.status(404).json({ error: 'Kh√¥ng t√¨m th·∫•y item trong gi·ªè h√†ng' });
  
      const productResult = await Products.getById(item.product_id);
      const product = Array.isArray(productResult) ? productResult[0] : productResult;
      
    //   console.log("üì¶ S·∫£n ph·∫©m:", product); // ‚úÖ Log product
  
      if (!product) return res.status(404).json({ error: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m' });
  
      // Ki·ªÉm tra t·ªìn kho
    //   console.log(`üëâ So s√°nh: item.quantity (${item.quantity}) vs product.quantity (${product.quantity})`);
  
      if (Number(item.quantity) >= Number(product.quantity)) {
        // console.log("‚ö†Ô∏è V∆∞·ª£t qu√° t·ªìn kho");
        return res.status(400).json({ error: 'S·ªë l∆∞·ª£ng v∆∞·ª£t qu√° h√†ng t·ªìn kho' });
      }
  
      await CartItem.incrementQuantity(id);
    //   console.log("‚úÖ ƒê√£ tƒÉng s·ªë l∆∞·ª£ng th√†nh c√¥ng");
  
      res.json({ message: 'TƒÉng s·ªë l∆∞·ª£ng th√†nh c√¥ng' });
  
    } catch (err) {
      console.error("‚ùå L·ªói tƒÉng s·ªë l∆∞·ª£ng:", err);
      res.status(500).json({ error: 'L·ªói tƒÉng s·ªë l∆∞·ª£ng' });
    }
  };
  

exports.decreaseQuantity = async (req, res) => {
  const { id } = req.params;
  try {
    const item = await CartItem.getItemById(id);
    if (item.quantity <= 1) {
      // T√πy ch·ªçn: x√≥a kh·ªèi gi·ªè n·∫øu c√≤n 1
      await CartItem.deleteItem(id);
    } else {
      await CartItem.decrementQuantity(id);
    }
    res.json({ message: 'Gi·∫£m s·ªë l∆∞·ª£ng th√†nh c√¥ng' });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Gi·∫£m s·ªë l∆∞·ª£ng th·∫•t b·∫°i' });
  }
};

exports.deleteItem = async (req, res) => {
    const { id } = req.params;
  
    try {
      const item = await CartItem.getItemById(id);
      if (!item) {
        return res.status(404).json({ error: 'Item kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng' });
      }
  
      await CartItem.deleteItem(id);
      res.json({ message: 'X√≥a item kh·ªèi gi·ªè h√†ng th√†nh c√¥ng' });
    } catch (err) {
      console.error("‚ùå L·ªói x√≥a item:", err);
      res.status(500).json({ error: 'L·ªói server khi x√≥a item' });
    }
  };


  exports.deleteCartItem = async (req, res) => {
    const { id } = req.params;
  
    try {
    //   const item = await CartItem.getItemById(id);
    //   if (!item) {
    //     return res.status(404).json({ error: 'Item kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng' });
    //   }
  
      await CartItem.deleteCartItem(id);
      res.json({ message: 'X√≥a item kh·ªèi gi·ªè h√†ng th√†nh c√¥ng' });
    } catch (err) {
      console.error("‚ùå L·ªói x√≥a item:", err);
      res.status(500).json({ error: 'L·ªói server khi x√≥a item' });
    }
  };
  

