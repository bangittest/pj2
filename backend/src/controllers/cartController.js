const Cart = require('../models/cart');

exports.createCart = async (req, res) => {
    try {
      const userId = req.body.user_id;
  
      if (!userId) {
        return res.status(400).end();
      }
  
      // ‚ö†Ô∏è KI·ªÇM TRA N·∫æU ƒê√É C√ì GI·ªé H√ÄNG ‚Üí KH√îNG T·∫†O M·ªöI
      const existingCart = await Cart.getCartByUser(userId);
      if (existingCart) {
        return res.status(204).end(); // üëà 204: Kh√¥ng c·∫ßn tr·∫£ g√¨, d·ª´ng ·ªü ƒë√¢y lu√¥n
      }
  
      // ‚úÖ N·∫øu ch∆∞a c√≥, t·∫°o m·ªõi
      const cartId = await Cart.createCart(userId);
      return res.status(201).json({ id: cartId });
  
    } catch (err) {
      console.error("L·ªói t·∫°o cart:", err);
      return res.status(500).end();
    }
  };
  


  exports.getCartByUser = async (req, res) => {
    try {
      const { idUser } = req.query;
      const cart = await Cart.getCartByUsers(idUser);
  
    //   if (!cart) {
    //     return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y gi·ªè h√†ng cho ng∆∞·ªùi d√πng n√†y' });
    //   }
  
      res.json(cart);
    } catch (err) {
      console.error(err);
      res.status(500).json({ error: 'L·ªói server' });
    }
  };

  exports.clearCartByUserId = async (req, res) => {
    const userId = req.params.userId;
  
    try {
      console.log("B∆∞·ªõc 1: L·∫•y gi·ªè h√†ng c·ªßa userId:", userId);
  
      // L·∫•y gi·ªè h√†ng c·ªßa ng∆∞·ªùi d√πng theo userId
      const cart = await Cart.getCartByUsers(userId);
      
      // N·∫øu kh√¥ng t√¨m th·∫•y gi·ªè h√†ng, tr·∫£ v·ªÅ l·ªói
      if (!cart) {
        return res.status(404).json({ error: 'Kh√¥ng t√¨m th·∫•y gi·ªè h√†ng cho ng∆∞·ªùi d√πng n√†y.' });
      }
      console.log("Gi·ªè h√†ng c·ªßa userId:", cart);
  
      // B∆∞·ªõc 2: X√≥a t·∫•t c·∫£ s·∫£n ph·∫©m trong gi·ªè h√†ng theo cartId
      console.log("B∆∞·ªõc 2: ƒêang x√≥a cart_item theo cartId:", cart.id);
      const result = await Cart.deleteCartItemsByCartId(cart.id);
  
      // N·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c x√≥a, tr·∫£ v·ªÅ th√¥ng b√°o
      if (result.affectedRows === 0) {
        return res.status(404).json({ error: 'Gi·ªè h√†ng ƒë√£ tr·ªëng ho·∫∑c kh√¥ng c√≥ s·∫£n ph·∫©m ƒë·ªÉ x√≥a.' });
      }
  
      // B∆∞·ªõc 3: Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng
      return res.status(200).json({
        message: 'ƒê√£ x√≥a to√†n b·ªô s·∫£n ph·∫©m trong gi·ªè h√†ng.',
        affectedRows: result.affectedRows
      });
    } catch (error) {
      console.error('‚ùå L·ªói khi x√≥a gi·ªè h√†ng:', error);
      return res.status(500).json({ error: 'ƒê√£ x·∫£y ra l·ªói khi x√≥a gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i.' });
    }
  };
  

  
  